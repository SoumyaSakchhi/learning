Create a new database called "blog":
use blog

2 ways to create a collection.
db.createCollection("posts")
db.posts.insertOne(object)

2 methods to insert documents into a MongoDB database.
To insert a single document, use the insertOne() method.
db.posts.insertOne({
  title: "Post Title 1",
  body: "Body of post.",
  category: "News",
  likes: 1,
  tags: ["news", "events"],
  date: Date()
})

There are 2 methods to find and select data from a MongoDB collection, find() and findOne().

*Aggregation Pipelines
Aggregation operations allow you to group, sort, perform calculations, analyze data, and much more.
Aggregation pipelines can have one or more "stages". The order of these stages are important. 
Each stage acts upon the results of the previous stage.

db.posts.aggregate([
  // Stage 1: Only find documents that have more than 1 like
  {
    $match: { likes: { $gt: 1 } }
  },
  // Stage 2: Group documents by category and sum each categories likes
  {
    $group: { _id: "$category", totalLikes: { $sum: "$likes" } }
  }
])

Aggregation $group
This aggregation stage groups documents by the unique _id expression provided.
db.listingsAndReviews.aggregate(
    [ { $group : { _id : "$property_type" } } ]
)
This will return the distinct values from the property_type field.

Aggregation $limit
This aggregation stage limits the number of documents passed to the next stage.

